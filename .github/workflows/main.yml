name: Build

on:
  push:
    paths-ignore: 
      - 'README.md'

jobs:
  cli:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        configuration: [Release]
        include:
          - os: ubuntu-latest
            COMMAND: AM2RPortHelperCLI.csproj -p:PublishSingleFile=true -p:DebugType=embedded -r linux-x64 --no-self-contained
            ARTIFACT: AM2RPortHelperCLI/bin/Release/net6.0/linux-x64/publish/
          - os: macOS-latest
            COMMAND: AM2RPortHelperCLI.csproj -r osx-x64 --no-self-contained
            ARTIFACT: AM2RPortHelperCLI/bin/Release/net6.0/osx-x64/publish
          - os: windows-latest
            COMMAND: AM2RPortHelperCLI.csproj -p:PublishSingleFile=true -p:DebugType=embedded -r win-x86 --no-self-contained
            ARTIFACT: AM2RPortHelperCLI\bin\Release\net6.0\win-x86\publish
    runs-on: ${{ matrix.os }}
    

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      working-directory: ./AM2RPortHelperCLI
      run: dotnet restore
    - name: Build
      working-directory: ./AM2RPortHelperCLI
      run: dotnet publish ${{ matrix.COMMAND }} -c "${{ matrix.configuration }}"
    # Steps for uploading artifacts.
    - name: Zip to Archive
      run: 7z a -tzip ${{ matrix.os }}.zip ./${{ matrix.ARTIFACT }}
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: CLI-${{ matrix.os }}
        path: ${{ matrix.os }}.zip
        
  gui:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        configuration: [Release]
        include:
          - os: ubuntu-latest
            COMMAND: AM2RPortHelperGUI.Gtk.csproj -p:PublishSingleFile=true -p:DebugType=embedded -r linux-x64 --no-self-contained
            ARTIFACT: AM2RPortHelperGUI.Gtk/bin/Release/net6.0/linux-x64/publish/
            DIR: AM2RPortHelperGUI.Gtk
          - os: macOS-latest
            COMMAND: AM2RPortHelperGUI.Mac.csproj -r osx-x64 --no-self-contained
            ARTIFACT: AM2RPortHelperGUI.Mac/bin/Release/net6.0/osx-x64/publish
            DIR: AM2RPortHelperGUI.Mac
          - os: windows-latest
            COMMAND: AM2RPortHelperGUI.Wpf.csproj -p:PublishSingleFile=true -p:DebugType=embedded -r win-x86 --no-self-contained
            ARTIFACT: AM2RPortHelperGUI.Wpf\bin\Release\net6.0-windows\win-x86\publish
            DIR: AM2RPortHelperGUI.Wpf
    runs-on: ${{ matrix.os }}
    

    steps:
    - uses: actions/checkout@v3
      with: 
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      working-directory: ./AM2RPortHelperGUI/${{ matrix.DIR }}
      run: dotnet restore
    - name: Build
      working-directory: ./AM2RPortHelperGUI/${{ matrix.DIR }}
      run: dotnet publish ${{ matrix.COMMAND }} -c "${{ matrix.configuration }}"
    # Steps for uploading artifacts.
    - name: Zip to Archive
      run: 7z a -tzip ${{ matrix.os }}.zip ./AM2RPortHelperGUI/${{ matrix.ARTIFACT }}
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: GUI-${{ matrix.os }}
        path: ${{ matrix.os }}.zip

  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with: 
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      working-directory: ./AM2RPortHelperTests/
      run: dotnet restore
    - name: Test
      run: dotnet test
